// Generated by ReScript, PLEASE EDIT WITH CARE

import * as StyleProps from "../core/StyleProps.res.mjs";
import * as Core__Option from "@rescript/core/src/Core__Option.res.mjs";
import * as DesignSystem from "../core/DesignSystem.res.mjs";
import * as JsxRuntime from "react/jsx-runtime";

function $$Text(props) {
  var children = props.children;
  var variant = props.variant;
  var __tag = props.tag;
  var tag = __tag !== undefined ? __tag : "p";
  var stylePropsValue = Core__Option.getOr(props.styleProps, StyleProps.empty);
  var variantClasses = variant !== undefined ? DesignSystem.Typography.textStyleToClasses(variant) : [];
  var colorClass = Core__Option.mapOr(props.color, "", DesignSystem.colorToClass);
  var colorClasses = colorClass !== "" ? [colorClass] : [];
  var styleClasses = StyleProps.toClasses(stylePropsValue);
  var allClasses = variantClasses.concat(colorClasses).concat(styleClasses);
  var className = DesignSystem.cx(allClasses);
  if (tag === "label") {
    return JsxRuntime.jsx("label", {
                children: children,
                className: className
              });
  } else if (tag === "small") {
    return JsxRuntime.jsx("small", {
                children: children,
                className: className
              });
  } else if (tag === "p") {
    return JsxRuntime.jsx("p", {
                children: children,
                className: className
              });
  } else if (tag === "em") {
    return JsxRuntime.jsx("em", {
                children: children,
                className: className
              });
  } else if (tag === "h1") {
    return JsxRuntime.jsx("h1", {
                children: children,
                className: className
              });
  } else if (tag === "h2") {
    return JsxRuntime.jsx("h2", {
                children: children,
                className: className
              });
  } else if (tag === "h3") {
    return JsxRuntime.jsx("h3", {
                children: children,
                className: className
              });
  } else if (tag === "h4") {
    return JsxRuntime.jsx("h4", {
                children: children,
                className: className
              });
  } else if (tag === "h5") {
    return JsxRuntime.jsx("h5", {
                children: children,
                className: className
              });
  } else if (tag === "h6") {
    return JsxRuntime.jsx("h6", {
                children: children,
                className: className
              });
  } else if (tag === "div") {
    return JsxRuntime.jsx("div", {
                children: children,
                className: className
              });
  } else if (tag === "strong") {
    return JsxRuntime.jsx("strong", {
                children: children,
                className: className
              });
  } else {
    return JsxRuntime.jsx("span", {
                children: children,
                className: className
              });
  }
}

var make = $$Text;

export {
  make ,
}
/* DesignSystem Not a pure module */
