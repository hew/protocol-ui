// Generated by ReScript, PLEASE EDIT WITH CARE


function toString(method) {
  if (method === "PUT") {
    return "PUT";
  } else if (method === "DELETE") {
    return "DELETE";
  } else if (method === "POST") {
    return "POST";
  } else {
    return "GET";
  }
}

var Method = {
  toString: toString
};

function json() {
  var headers = {};
  headers["Content-Type"] = "application/json";
  return headers;
}

function withAuth(token) {
  var headers = json();
  headers["Authorization"] = "Bearer " + token;
  return headers;
}

var $$Headers = {
  json: json,
  withAuth: withAuth
};

function make(method, headers, bodyOpt) {
  var body = bodyOpt !== undefined ? bodyOpt : "";
  return {
          method: method,
          headers: headers,
          body: body
        };
}

function get() {
  return make("GET", json(), undefined);
}

function post(body) {
  return make("POST", json(), body);
}

var RequestInit = {
  make: make,
  get: get,
  post: post
};

var $$Response = {};

async function get$1(url) {
  try {
    var response = await fetch(url, get());
    if (!response.ok) {
      return {
              TAG: "Error",
              _0: "HTTP " + response.status.toString() + ": " + response.statusText
            };
    }
    var data = await response.json();
    return {
            TAG: "Ok",
            _0: data
          };
  }
  catch (exn){
    return {
            TAG: "Error",
            _0: "Network error"
          };
  }
}

async function post$1(url, body) {
  try {
    var bodyString = JSON.stringify(body);
    var response = await fetch(url, post(bodyString));
    if (!response.ok) {
      return {
              TAG: "Error",
              _0: "HTTP " + response.status.toString() + ": " + response.statusText
            };
    }
    var data = await response.json();
    return {
            TAG: "Ok",
            _0: data
          };
  }
  catch (exn){
    return {
            TAG: "Error",
            _0: "Network error"
          };
  }
}

var Api = {
  get: get$1,
  post: post$1
};

export {
  Method ,
  $$Headers ,
  RequestInit ,
  $$Response ,
  Api ,
}
/* No side effect */
